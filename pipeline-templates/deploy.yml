parameters:
  pool:
  azureSubscription:
  location: 'West Europe'
  environmentName:
  clusterConnection:
  serviceConnectionName:
jobs:
- deployment: DeployProviderAdjustments
  pool:
    name: ${{ parameters.pool }}
    demands:
    - ReleaseEnvironment -equals ${{ parameters.environmentName }}
    workspace:
      clean: all
  environment: ${{ parameters.environmentName }}
  variables:
    PAAppFilter: 'SFA.DAS.Payments.ProviderAdjustments'
  
  strategy:
    runOnce:
      deploy:
        steps:
        - task: ServiceFabricPowerShell@1
          displayName: 'Remove DAS Payments - ProviderAdjustments'
          inputs:
            ConnectionType: 'ClusterConnection'
            serviceConnectionName: ${{ parameters.serviceConnectionName }}
            clusterConnectionName: ${{ parameters.clusterConnection }}
            ScriptType: 'InlineScript'
            #ScriptType: 'FilePath'
            InlineScript: |
              Write-Host "Hello from inline PowerShell script!"
              Param (
              [Parameter(Mandatory=$false)]
              [string]$applicationFilter = 'SFA.DAS'
              )
              write-host  "testing"
              Get-ServiceFabricApplication | ?  { $_.ApplicationName -like "fabric:/$applicationFilter*" } | % {
              $applicationNameUri = $_.ApplicationName.OriginalString
              write-host "Removing..."
              write-host "    Application uri: $applicationNameUri"
              Remove-ServiceFabricApplication -ApplicationName $applicationNameUri -Force
              }

              Get-ServiceFabricApplicationType | ?  { $_.ApplicationTypeName -like "$applicationFilter*" } | % {
              $applicationTypeName = $_.ApplicationTypeName
              $applicationTypeVersion  = $_.ApplicationTypeVersion
              write-host "Removing... $applicationTypeName : $applicationTypeVersion " 
              Unregister-ServiceFabricApplicationType -ApplicationTypeName $applicationTypeName -ApplicationTypeVersion $applicationTypeVersion -Force
              }
            #  Remove-ServiceFabricApplication -ApplicationName fabric:/SFA.DAS.Payments.ProviderAdjustments.ServiceFabric -Force
            #  Unregister-ServiceFabricApplicationType -ApplicationTypeName SFA.DAS* -ApplicationTypeVersion $applicationTypeVersion -Force
            #ScriptPath: '$(Pipeline.Workspace)/publish/RemoveServiceFabricApps.ps1'
            #ScriptArguments: '-applicationFilter $(PAAppFilter)'
            #continueOnError: true
        - powershell: |
            echo "Cleaning temporary directory..."
            Remove-Item -Path 'C:\Windows\ServiceProfiles\NetworkService\AppData\Local\Temp' -Recurse -Force
            

        - task: TotalALM.totalalm-tokenization.tokenization-build-task.Tokenization@2
          displayName: 'Tokenization: Transform ApplicationParameters file Cloud.xml'
          inputs:
            SourcePath: '$(Pipeline.Workspace)\**'
            TargetFileNames: Cloud.xml
            RequireVariable: true

        - task: ServiceFabricDeploy@1
          displayName: 'Deploy Service Fabric Application - DAS_Payment - ProviderAdjustments'
          inputs:
            applicationPackagePath: '$(pipeline.workspace)/provideradjustments/ApplicationPackage'
            serviceConnectionName: ${{ parameters.serviceConnectionName }}
            publishProfilePath: '$(pipeline.workspace)/provideradjustments/PublishProfiles/Cloud.xml'
            applicationParameterPath: '$(pipeline.workspace)/provideradjustments/ApplicationParameters/Cloud.xml'
            applicationName: 'SFA.DAS.Payments.ProviderAdjustments'
            compressPackage: true
            skipUpgradeSameTypeAndVersion: true
            overridePublishProfileSettings: true
            upgradeMode: UnmonitoredAuto
            UpgradeReplicaSetCheckTimeoutSec: 600000
            TimeoutSec: 600000
            continueOnError: true
            timeoutInMinutes: 65
